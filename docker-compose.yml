version: '3'

services:
  reverse-proxy:
    image: traefik:v2.6
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock
      - ./traefik:/etc/traefik:rw

  challenge:
    build:
      context: ./challenge
      dockerfile: Dockerfile 
    image: challenge:latest
    restart: always
    ports:
      - "8080"
      - "9090"
    labels:
      - traefik.enable=true
      - traefik.http.routers.challenge_graphql.entrypoints=web
      - traefik.http.routers.challenge_graphql.rule=PathPrefix(`/challenge/graphql`)
      - traefik.http.routers.challenge_graphql.service=challenge_graphql
      - traefik.http.middlewares.challenge-strip-prefix.stripprefix.prefixes=/challenge
      - traefik.http.routers.challenge_graphql.middlewares=challenge-strip-prefix@docker
      - traefik.http.services.challenge_graphql.loadbalancer.server.port=8080
      - traefik.http.routers.challenge_grpc.entrypoints=web
      - traefik.http.routers.challenge_grpc.rule=!PathPrefix(`/challenge/graphql`) && PathPrefix(`/challenge`)
      - traefik.http.routers.challenge_grpc.service=challenge_grpc
      - traefik.http.routers.challenge_grpc.middlewares=challenge-strip-prefix@docker
      - traefik.http.services.challenge_grpc.loadbalancer.server.port=9090
    environment:
      - SPRING_PROFILES_ACTIVE=docker

  solution:
    restart: always
    build:
      context: ./solution
      dockerfile: Dockerfile 
    image: solution:latest
    ports:
      - "8080"
      - "9090"
    labels:
      - traefik.enable=true
      - traefik.http.routers.solution_graphql.entrypoints=web
      - traefik.http.routers.solution_graphql.rule=PathPrefix(`/solution/graphql`)
      - traefik.http.routers.solution_graphql.service=solution_graphql
      - traefik.http.middlewares.solution-strip-prefix.stripprefix.prefixes=/solution
      - traefik.http.routers.solution_graphql.middlewares=solution-strip-prefix@docker
      - traefik.http.services.solution_graphql.loadbalancer.server.port=8080
      - traefik.http.routers.solution_grpc.entrypoints=web
      - traefik.http.routers.solution_grpc.rule=!PathPrefix(`/solution/graphql`) && PathPrefix(`/solution`)
      - traefik.http.routers.solution_grpc.service=solution_grpc
      - traefik.http.routers.solution_grpc.middlewares=solution-strip-prefix@docker
      - traefik.http.services.solution_grpc.loadbalancer.server.port=9090
    environment:
      - SPRING_PROFILES_ACTIVE=docker

  user:
    build:
      context: ./user
      dockerfile: Dockerfile 
    image: user:latest
    restart: always
    ports:
      - "8080"
      - "9090"
    labels:
      - traefik.enable=true
      - traefik.http.routers.user_graphql.entrypoints=web
      - traefik.http.routers.user_graphql.rule=PathPrefix(`/user/graphql`)
      - traefik.http.routers.user_graphql.service=user_graphql
      - traefik.http.middlewares.user-strip-prefix.stripprefix.prefixes=/user
      - traefik.http.routers.user_graphql.middlewares=user-strip-prefix@docker
      - traefik.http.services.user_graphql.loadbalancer.server.port=8080
      - traefik.http.routers.user_grpc.entrypoints=web
      - traefik.http.routers.user_grpc.rule=!PathPrefix(`/user/graphql`) && PathPrefix(`/user`)
      - traefik.http.routers.user_grpc.service=user_grpc
      - traefik.http.routers.user_grpc.middlewares=user-strip-prefix@docker
      - traefik.http.services.user_grpc.loadbalancer.server.port=9090
    environment:
      - SPRING_PROFILES_ACTIVE=docker

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile 
    image: frontend:latest
    ports:
      - "3000"
    labels:
      - traefik.enable=true
      - traefik.http.routers.frontend.entrypoints=web
      - traefik.http.routers.frontend.rule=PathPrefix(`/frontend`)
      - traefik.http.middlewares.frontend-strip-prefix.stripprefix.prefixes=/frontend
      - traefik.http.routers.frontend.middlewares=frontend-strip-prefix@docker
      - traefik.http.routers.frontend-assets.entrypoints=web
      - traefik.http.routers.frontend-assets.rule=PathPrefix(`/static`)
      - traefik.http.routers.frontend-manifest.entrypoints=web
      - traefik.http.routers.frontend-manifest.rule=Path(`/manifest.json`)
      - traefik.http.routers.frontend-anything-else.entrypoints=web
      - traefik.http.routers.frontend-anything-else.rule=Path(`/{name:[a-z0-9A-Z]+}.png`, `/{name:[a-z0-9A-Z]+}.jpg`, `/{name:[a-z0-9A-Z]+}.js`, `/{name:[a-z0-9A-Z]+}.css`)

  postgresql_challenge:
    image: postgres:alpine
    environment:
      POSTGRES_USER: postgres_admin
      POSTGRES_PASSWORD: SECURE_PASSWORD
      POSTGRES_DB: challenge
    ports:
      - "5432"

  postgresql_solution:
    image: postgres:alpine
    environment:
      POSTGRES_USER: postgres_admin
      POSTGRES_PASSWORD: SECURE_PASSWORD
      POSTGRES_DB: solution
    ports:
      - "5432"

  postgresql_user:
    image: postgres:alpine
    environment:
      POSTGRES_USER: postgres_admin
      POSTGRES_PASSWORD: SECURE_PASSWORD
      POSTGRES_DB: user
    ports:
      - "5432"