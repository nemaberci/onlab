type Solution {
    id: ID!
    result: Boolean
    language: String!
    content: String
    challengeId: ID!
    createdBy: String!
    reviewedBy: String
    points: Int
}

input SolutionInput {
    language: String!
    content: String!
    challengeId: ID!
}

input ReviewInput {
    points: Int
    comment: String
    result: Boolean
}

type SolutionQuery {
    all: [Solution]
    byChallenge(id: ID!): [Solution]
    byEmail(email: String!): [Solution]
    byId(id: ID!): Solution
}

type SolutionMutation {
    create(solution: SolutionInput!): Solution
    update(id: ID!, solution: SolutionInput!): Solution
    delete(id: ID!): Boolean
    review(id: ID!, review: ReviewInput!): Solution
}

extend type Query {
    solution: SolutionQuery
}

extend type Mutation {
    solution: SolutionMutation
}

type Query {

}

type Mutation {

}