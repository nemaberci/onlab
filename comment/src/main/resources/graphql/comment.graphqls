
enum CommentOwnerType {
    SOLUTION,
    CHALLENGE
}

type CommentOwner {
    id: ID!
    type: CommentOwnerType!
}

type Comment {
    id: ID!
    text: String!
    createdBy: String!
    owner: CommentOwner!
}

input CommentOwnerInput {
    id: ID!
    type: CommentOwnerType!
}

input CommentInput {
    text: String!
    owner: CommentOwnerInput!
}

type CommentQuery {
    all: [Comment]
    byOwner(owner: CommentOwnerInput!): [Comment]
    byUser(email: String!): [Comment]
    byId(id: ID!): Comment
}

type CommentMutation {
    create(comment: CommentInput!): Comment
    update(id: ID!, text: String!): Comment
    delete(id: ID!): Boolean
}

type Query {
    comment: CommentQuery
}

type Mutation {
    comment: CommentMutation
}